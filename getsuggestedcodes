from django.shortcuts import render
from rest_framework.response import response
from rest_framework.views import APIView
from django.core.files.storage import FileSystemStorage
from django.conf import settings
from suggestedcode.db_config import Database
import re
import os
import pandas as pd
import pymysql
import urllib
import sqlalchemy as sa

class getsuggestedcode(APIView):
    def_init_(self):
    self.patient_age=None
    self.scenario_1=None
    self.scenario_2=None
    self.scenario_3=None
    self.scenario_4=None

    self.conn = self.cursor= None

def post(self,request):
    try:
        if not request.data.get("ptaccno",None):
            return response({"status":"Failure","message":"patient acc nbr is required"}, status=400)
        def post(self, request):
            try:
                if not
request.data.get("ptaccno",None):retrun Response({"status":"Failure","message":"Patientaccno is required"}, status=400)
        if self.patient_age==None:
            return Response({"status":"Success","message":"patient not found against that one"},status =200)
       
def scenario_1(self, Patienyacc):
    try:
        if self.patientage>=40 and self.patientage<=75:
        q= f""" select top1 * from tblpt"""
    df=self.get_date(q)
    if len(df) > 0:
        return '123',"name of cpt"
    else:
        return None, None        
else:
    return None, None
 except Exception as e:
            return Response({"status":"Failure","message : ": str(e)}, status=400)
class Index(APIview):

    def get(self, request):
        # return "working"
        return Response({"status": "Success","message":"working"}, status=200)

